AIM
To write a client-server application for chat using TCP.
ALGORITHM:
CLIENT
Step 1:Start the program
Step 2:Include necessary package in java
Step 3:To create a socket in client to server.
Step 4:The client establishes a connection to the server.
Step 5:The client accept the connection and to send the data from client to server.
Step 6:The client communicates the server to send the end of the message
Step 7:Stop the program.
SERVER
Step 1:Start the program
Step 2:Include necessary package in java
Step 3:To create a socket in server to client
Step 4:The server establishes a connection to theclient.
Step 5:The server accept the connection and to send the data from server to client and viceversa
Step 6:The server communicate the client to send the end of the message.
Step 7:Stop the program.
PROGRAM
TCPserver1.java
import java.net.*;
import java.io.*; 
public class TCPserver1
{
public static void main(String arg[])
{
ServerSocket s=null; String line;
DataInputStream is=null,is1=null;
PrintStream os=null; Socket c=null; try
{
s=new ServerSocket(9999);
}
catch(IOException e)
{
System.out.println(e);
} try
{
c=s.accept();
is=new DataInputStream(c.getInputStream());
is1=new DataInputStream(System.in); 
os=new PrintStream(c.getOutputStream()); 
do
{
line=is.readLine();
System.out.println("Client:"+line); 
System.out.println("Server:"); 
line=is1.readLine(); os.println(line);
}
while(line.equalsIgnoreCase("quit")==false);
is.close();
os.close();
}
catch(IOException e)
{
System.out.println(e);
}
}
}
TCPclient1.java
import java.net.*;
import java.io.*; 
public class TCPclient1
{
public static void main(String arg[])
{
Socket c=null;
String line;
DataInputStream is,is1; 
PrintStream os;
try
{
c=new Socket("10.0.200.36",9999);
}
catch(IOException e)
{
System.out.println(e);
}
try
{
os=new PrintStream(c.getOutputStream());
is=new DataInputStream(System.in);
is1=new DataInputStream(c.getInputStream());
do
{
System.out.println("Client:");
line=is.readLine();
os.println(line);
System.out.println("Server:"+ is1.readLine());
}
while(line.equalsIgnoreCase("quit")==false);
is1.close(); 
os.close();
}
catch(IOException e)
{
System.out.println("Socket Closed!Message Passing is over");
}}
OUTPUT:
SERVER
C:\Program Files\Java\jdk1.5.0\bin>javac TCPserver1.java 
Note: TCPserver1.java uses or overrides a deprecated API.
Note: Recompile with -deprecation for details. C:\Program Files\Java\jdk1.5.0\bin>java 
TCPserver1
Client: Hai Server 
Server:Hai Client 
Client: How are you 
Server:Fine
Client:quit
Server:quit
CLIENT
C:\Program Files\Java\jdk1.5.0\bin>javac TCPclient1.java
Note: TCPclient1.java uses or overrides a deprecated API. Note: Recompile with -deprecation for 
details.
C:\Program Files\Java\jdk1.5.0\bin>java TCPclient1
Client:Hai Server 
Server: Hai Client 
Client:How are you 
Server: Fine 
Client:quit
Server: quit
RESULT:
Thus, the Java Program to implement chat application using TCP Sockets was written & executed
successfully.
